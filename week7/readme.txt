系统I/O：不带缓冲的I/O
在很多方面，使用标准I/O库和使用不带缓存的I/O类似。你需要先打开一个文件以建立一个访问路径。
这个操作的返回值将作为其他标准I/O库函数的参数。在标准I/O库中，与底层文件描述符对应的对等
物叫流(stream)，它被实现为指向结构FILE的指针。
注意，不要把这里的文件流与C++语言中的输入输出流(iostream)以及AT&TUNIXSystemVRelease3
中引入的进程间通信STREAMS模型相混淆。
在启动程序时，有三个文件流是自动打开的。它们是stdin、stdout和stderr。它们都是在stdio.h头文件
里定义的，分别代表着标准输入、标准输出和标准错误输出，与底层文件描述符0、1和2相对应。
fopen、fclosefread、fwritefflushfseekfgetc、getc、getcharfputc、putc、putcharfgets、getsprintf、fprintfsprintfscanf、fscanfsscanf

标准I/O库：带缓冲的I/O（不会主动执行I/O，I/O效率高，但速度慢）
1 实用特性
存储设备:磁盘、磁带 i/o设备:穿孔卡片、键盘、鼠标、显示器、打印机 终端设备:交互设备
2 信息组织方式:
1 字符设备:字符为单位组织和处理信息的设备，如键盘、终端、打印机 2 块设备:字符块为单位组织和
处理信息的设备，如磁盘、磁带 块设备 设备一次操作的数据传送单位 通常输入输出类设备都是字符设备 存储设备都是块设备
3 按照设备使用可共享性分类:
独占设备:指在一段时间内只允许一个用户进程使用的设备。多数低速设备都属于独占设备，如打印机 
共享设备:在一段时间内允许多个进程使用的设备。如磁盘，若干个进程可以交替从磁盘上读写信息 
虚拟设备:通过虚拟技术将一台独占设备变换成为若干逻辑设备，供若干个进程同时使用
可移植性强，是语言的一部分
